---
- name: Install kcp
  hosts: localhost
  become: true
  vars:
    kcp_secure_port: 6443
    kcp_extra_args: ""
    kcp_version: 0.11.0
    kcp_rootdir: /etc/kcp
    kcp_bin_baseurl: https://github.com/kcp-dev/kcp/releases/download
    host_os: "{{ ansible_facts['system'] | lower }}"
    host_arch: "{{ ansible_facts['architecture'] | regex_replace('aarch64', 'arm64') | regex_replace('x86_64', 'amd64') }}"
    # optional build vars
    build: false
    source_repo: kcp-dev/kcp
    source_branch: main
  environment:
    IGNORE_GO_VERSION: 0
  handlers:
    - name: Restart kcp
      ansible.builtin.systemd:
        name: kcp
        state: restarted
#
  tasks:
#
  - name: Download and extract kcp and kubectl plugin (v{{ kcp_version }}_{{ host_os }}_{{ host_arch }}) from official kcp release
    ansible.builtin.unarchive:
      src: "{{ kcp_bin_baseurl }}/v{{ kcp_version }}/{{ item }}_{{ kcp_version }}_{{ host_os }}_{{ host_arch }}.tar.gz"
      dest: /usr/local
      owner: root
      group: root
      remote_src: yes
      setype: bin_t
    loop:
      - kcp
      - kubectl-kcp-plugin
    notify: Restart kcp
    when: not build | bool

  - name: Ensure golang and make are installed if building from source
    ansible.builtin.package:
      name:
        - golang
        - make
      state: present
    when: build | bool

  - name: Clone {{ source_repo }}:{{ source_branch }} from github.com if building
    ansible.builtin.git:
      repo: https://github.com/{{ source_repo }}.git
      dest: src/{{ source_repo }}
      single_branch: yes
      version: "{{ source_branch }}"
      force: true
    when: build | bool

  - name: Build
    community.general.make:
      chdir: src/{{ source_repo }}
    when: build | bool

  - name: Optionally install kcp with locally built binaries
    ansible.builtin.copy:
      src: src/{{ source_repo }}/bin/{{ item }}
      dest: /usr/local/bin/{{ item }}
      owner: root
      group: root
      mode: 0755
      remote_src: yes
      setype: bin_t
    loop:
      - kcp
      - kubectl-kcp
      - kubectl-workspace
      - kubectl-workspaces
      - kubectl-ws
    when: build | bool
    notify: Restart kcp

  - name: Install systemd unit
    ansible.builtin.template:
      src: kcp.service.j2
      dest: /etc/systemd/system/kcp.service
      mode: "0644"
    notify: Restart kcp

  - name: Ensure root directory
    ansible.builtin.file:
      path: "{{ kcp_rootdir }}"
      state: directory

  - name: Enable kcp systemd service on port {{ kcp_secure_port }} and start with handler
    ansible.builtin.systemd:
      name: kcp
      enabled: true
      daemon_reload: true
    notify: Restart kcp

  - name: To access cluster as root the cluster as root...
    debug:
      msg:
        export KUBECONFIG={{ kcp_rootdir }}/admin.kubeconfig

  - name: To access the cluster as a non-root user...
    debug:
      msg:
        sudo cp {{ kcp_rootdir }}/admin.kubeconfig ~/admin.kubeconfig
        sudo chown $(whoami) ~/admin.kubeconfig && chmod +r ~/admin.kubeconfig
        export KUBECONFIG=~/admin.kubeconfig
